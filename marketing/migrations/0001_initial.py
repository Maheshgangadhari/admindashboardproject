# Generated by Django 4.0.3 on 2022-03-29 03:08

import ckeditor.fields
import colorfield.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bannerimages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='imagebanner/')),
            ],
            options={
                'verbose_name_plural': 'Banner Images',
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Categoryname', models.CharField(max_length=200)),
                ('parentcategory', models.CharField(choices=[('Select', 'Select'), ('select parent category', 'select parent category'), ('Clicks', 'Clicks'), ('Salse', 'Salse'), ('Actions', 'Actions'), ('Leads', 'Leads'), ('Registration', 'Registration'), ('237606380660229', '237606380660229'), ('WYKR Category', 'dsd'), ('Programacion', 'Programacion'), ('Test', 'Test'), ('Fruit', 'Fruit'), ('Amall', 'Amall'), ('tall', 'tall'), ('logistics ', 'logistics '), ('FX', 'FX'), ('MD', 'MD'), ('Puzzle Book', 'Puzzle Book'), ('xxxxxx', 'xxxxxx'), ('E-books Delivery', 'E-books Delivery'), ('E test', 'E test'), ('Hosting', 'Hosting'), ('Bus', 'Bus'), ('Earnshow', 'Earnshow'), ('matrix', 'matrix'), ('FSL', 'FSL'), ('Marketing', 'Marketing'), ('Pintores', 'Pintores'), ('img', 'img'), ('Link', 'Link'), ('Husni', 'Husni'), ('loan', 'loan'), ('test', 'test'), ('Abbas', 'Abbas'), ('Lawwa Services', 'Lawwa Services'), ('SCKREAM Test', 'SCKREAM Test')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Levelsetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commissiontype', models.CharField(choices=[('Default', 'Default'), ('Custom', 'Custom'), ('Enable', 'Enable')], max_length=28)),
                ('CPR', models.PositiveIntegerField()),
                ('CPS', models.PositiveIntegerField()),
                ('CPC', models.PositiveIntegerField()),
                ('CPA', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name_plural': 'Level Settings',
            },
        ),
        migrations.CreateModel(
            name='Postback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postback', models.CharField(choices=[('Default', 'Default'), ('Custom', 'Custom'), ('Enable', 'Enable')], max_length=28)),
            ],
            options={
                'verbose_name_plural': 'Post back',
            },
        ),
        migrations.CreateModel(
            name='Recurringsetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recursion', models.CharField(choices=[('Select Recursion', 'Select Recursion'), ('Every day', 'Every day'), ('Every week', 'Every week'), ('Every month', 'Every month'), ('Every year', 'Every year'), ('Custom time', 'Custom time')], max_length=28)),
                ('choosecustomendtime', models.DateTimeField()),
            ],
            options={
                'verbose_name_plural': 'Recurring Settings',
            },
        ),
        migrations.CreateModel(
            name='VideeoLinkSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('toolType', models.CharField(choices=[('Select Tool Type', 'Select Tool Type'), ('Sale Integration', 'Sale Integration'), ('Single Action Integration', 'Single Action Integration'), ('Multi Action Integration', 'Multi Action Integration'), ('Click Integration', 'Click Integration')], max_length=28)),
                ('toolperiod', models.CharField(choices=[('Always Running', 'Always Running'), ('From Today To Custom Date', 'From Today To Custom Date'), ('From Custom Date To Lifetime', 'From Custom Date To Lifetime'), ('For Custom Period', 'For Custom Period')], max_length=28)),
                ('name', models.CharField(max_length=200)),
                ('targetlink', models.CharField(max_length=500)),
                ('featuredimage', models.FileField(upload_to='featureimagebanner/')),
                ('is_draft', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('videolink', models.CharField(max_length=200)),
                ('autoplay', models.CharField(choices=[('Disable', 'Disable'), ('Enable', 'Enable')], max_length=28)),
                ('Hegiht', models.PositiveSmallIntegerField()),
                ('width', models.PositiveSmallIntegerField()),
                ('buttontext', models.CharField(max_length=100)),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketing.categories')),
            ],
            options={
                'verbose_name_plural': 'Video Link Settings',
            },
        ),
        migrations.CreateModel(
            name='TextCampaigns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('toolType', models.CharField(choices=[('Select Tool Type', 'Select Tool Type'), ('Sale Integration', 'Sale Integration'), ('Single Action Integration', 'Single Action Integration'), ('Multi Action Integration', 'Multi Action Integration'), ('Click Integration', 'Click Integration')], max_length=28)),
                ('toolperiod', models.CharField(choices=[('Always Running', 'Always Running'), ('From Today To Custom Date', 'From Today To Custom Date'), ('From Custom Date To Lifetime', 'From Custom Date To Lifetime'), ('For Custom Period', 'For Custom Period')], max_length=28)),
                ('name', models.CharField(max_length=200)),
                ('targetlink', models.CharField(max_length=500)),
                ('featuredimage', models.FileField(upload_to='featureimagebanner/')),
                ('is_draft', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('content', models.TextField(max_length=500)),
                ('textsize', models.PositiveSmallIntegerField()),
                ('textcolor', colorfield.fields.ColorField(default='#FF0000', image_field=None, max_length=18, samples=None)),
                ('bordercolor', colorfield.fields.ColorField(default='#FF0000', image_field=None, max_length=18, samples=None)),
                ('backgroundcolor', colorfield.fields.ColorField(default='#FFFFFFFF', image_field=None, max_length=18, samples=None)),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketing.categories')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MarketingPrograms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('programname', models.CharField(max_length=200)),
                ('commissiontype', models.CharField(max_length=100)),
                ('commissionforsale', models.CharField(choices=[('Select Product Commission Type', 'Select Product Commission Type'), ('Percentage(%)', 'Percentage(%)'), ('Fixed', 'Fixed')], max_length=200)),
                ('salestatus', models.CharField(choices=[('Enable', 'Enable'), ('Disable', 'Disable')], max_length=200)),
                ('clickallow', models.CharField(choices=[('Allow Multi Clicks', 'Allow Multi Clicks'), ('Allow Single Click', 'Allow Single Click')], max_length=200)),
                ('numberofclick', models.IntegerField()),
                ('amountperclick', models.IntegerField()),
                ('clickstatus', models.CharField(choices=[('Enable', 'Enable'), ('Disable', 'Disable')], max_length=200)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LinkaddsSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('toolType', models.CharField(choices=[('Select Tool Type', 'Select Tool Type'), ('Sale Integration', 'Sale Integration'), ('Single Action Integration', 'Single Action Integration'), ('Multi Action Integration', 'Multi Action Integration'), ('Click Integration', 'Click Integration')], max_length=28)),
                ('toolperiod', models.CharField(choices=[('Always Running', 'Always Running'), ('From Today To Custom Date', 'From Today To Custom Date'), ('From Custom Date To Lifetime', 'From Custom Date To Lifetime'), ('For Custom Period', 'For Custom Period')], max_length=28)),
                ('name', models.CharField(max_length=200)),
                ('targetlink', models.CharField(max_length=500)),
                ('featuredimage', models.FileField(upload_to='featureimagebanner/')),
                ('is_draft', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('linktitle', models.CharField(max_length=200)),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketing.categories')),
            ],
            options={
                'verbose_name_plural': 'Link Adds Settings',
            },
        ),
        migrations.CreateModel(
            name='GeneralSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('toolType', models.CharField(choices=[('Select Tool Type', 'Select Tool Type'), ('Sale Integration', 'Sale Integration'), ('Single Action Integration', 'Single Action Integration'), ('Multi Action Integration', 'Multi Action Integration'), ('Click Integration', 'Click Integration')], max_length=28)),
                ('toolperiod', models.CharField(choices=[('Always Running', 'Always Running'), ('From Today To Custom Date', 'From Today To Custom Date'), ('From Custom Date To Lifetime', 'From Custom Date To Lifetime'), ('For Custom Period', 'For Custom Period')], max_length=28)),
                ('name', models.CharField(max_length=200)),
                ('targetlink', models.CharField(max_length=500)),
                ('featuredimage', models.FileField(upload_to='featureimagebanner/')),
                ('is_draft', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('terms', ckeditor.fields.RichTextField()),
                ('bannerimages', models.ManyToManyField(to='marketing.bannerimages')),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketing.categories')),
            ],
            options={
                'verbose_name_plural': 'General Settings',
            },
        ),
    ]
